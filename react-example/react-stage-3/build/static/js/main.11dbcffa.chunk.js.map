{"version":3,"sources":["history.js","ui/ConfirmDialog.js","api.js","tabs/forms/userloginform.js","tabs/apiprefix.js","tabs/login.js","tabs/forms/userinformation.js","tabs/register.js","ui/TabChooser.js","tabs/welcome.js","RequireAuthentication.js","ui/BarGraph.js","ui/SnackbarWrapper.js","tabs/QuestionDetail.js","tabs/questions.js","tabs/profile.js","tabs/EditProfile.js","tabs/forms/EditableField.js","tabs/listusers.js","tabs/forms/QuestionForm.js","tabs/NewQuestion.js","tabs/EditQuestion.js","app.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","basename","process","Confirm","_ref","okLabel","cancelLabel","title","children","onHide","other","Object","objectWithoutProperties","react_default","a","createElement","index_es","assign","disableBackdropClick","onClose","maxWidth","aria-labelledby","id","onClick","color","dialog","modalElement","Promise","resolve","mountNode","document","open","onExited","ReactDOM","unmountComponentAtNode","render","React","cloneElement","action","makeAPICall","_x","_x2","_x3","_makeAPICall","apply","this","arguments","_callee","method","url","body","headers","token","req","regenerator_default","wrap","_context","prev","next","Content-Type","localStorage","olivia_token","concat","fetch","JSON","stringify","abrupt","t0","stop","withStyles","theme","main","defineProperty","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","avatar","margin","backgroundColor","palette","secondary","form","submit","onSubmit","message","classes","isLoading","_useState","useState","username","password","_useState2","slicedToArray","values","setValues","handleChange","event","_event$target","target","name","value","objectSpread","Fragment","className","CssBaseline_default","Paper_default","component","Avatar_default","LockOutlined_default","Typography_default","variant","preventDefault","FormControl_default","required","fullWidth","InputLabel_default","htmlFor","Input_default","onChange","autoComplete","autoFocus","type","align","style","paddingTop","Button_default","apiprefix","withTheme","link","isDark","updateLogin","selectTab","updateUser","updateAdmin","props","updateMessage","_useState3","_useState4","setLoading","nextLocation","undefined","history","location","state","from","pathname","console","log","userLogin","_ref2","asyncToGenerator","mark","res","sent","json","status","olivia_id","admin","authenticated","replace","window","href","paddingBottom","fontSize","error","userloginform","Link_default","RRLink","to","cancel","messageColor","confpassword","firstname","lastname","email","alert","tempUser","placeholder","CircularProgress_default","Grid_default","container","justify","item","size","Link","styles","RegisterTab","mess","isLoad","_useState5","_useState6","setMsgColor","_useState7","_useState8","isOk","updateOk","addNewUser","user","react_router","gutterBottom","userinformation","withRouter","root","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","content","contentShift","flex","login_logout","themeSwitch","changeTheme","isLoggedIn","currentUser","isAdmin","findCurrentTabBasedOnPath","selectedTab","findIndex","tab","path","drawerOpen","setDrawerOpen","themeSwitchState","setThemeSwitch","currentTab","handleTabChange","find","index","pathFromTabIndex","listen","LogoutButton","clickHandler","push","key","label","AccountCircle_default","drawerContent","Drawer_default","anchor","IconButton_default","ChevronLeft_default","FormControlLabel_default","control","Switch_default","checked","Divider_default","List_default","map","hidden","reqLogin","reqAdmin","react_router_dom","ListItem_default","button","currenttab","ListItemText_default","primary","AppBar_default","position","classNames","Toolbar_default","aria-label","Menu_default","noWrap","i","exact","login","register","removeItem","tabLink","RequireAuthentication","Component","data","maxY","axisLabel","Math","max","toConsumableArray","y","nTicks","es","xType","height","animation","left","top","colorType","tickFormat","d","s","length","substr","tickTotal","stack","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","green","dark","amber","icon","iconVariant","opacity","Icon","SnackbarContent_default","aria-describedby","close","Close_default","table","editButton","editIcon","choices","group","marginBottom","common","black","question","description","updateQuestion","hasCalled","updateCall","setLoadingVote","_useState9","_useState10","currentChoice","setChoice","_useState11","totals","_useState12","votes","updateVotes","_useState13","_useState14","prevVote","updateVote","_useState15","_useState16","setVoting","_useState17","_useState18","showSnackbar","updateSnackbar","_useState19","_useState20","snackbarMessage","setSnackbarMessage","selectOption","Number","_handleVote","_callee5","_context5","ui_SnackbarWrapper","submitVote","loadVotes","loadQuestion","_ref3","murl","response","rbody","substring","lastIndexOf","_ref4","_callee2","_context2","getUserVote","_ref5","_callee3","_context3","_ref6","_callee4","request","_context4","choice","choiceFromId","tempChoice","grData","x","forEach","vote","dataInd","elem","count","labels","votingResults","xs","Card_default","ui_BarGraph","votingPrompt","votePrompt","votePromptBody","questionTitle","Table_default","TableBody_default","TableRow_default","TableCell_default","_ref7","FormLabel_default","formLabel","RadioGroup_default","Radio_default","CardActions_default","formButtons","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","optionsCell","questionCell","fab","bottom","right","match","haveCalled","questions","updateQuestionList","tempQuery","queryString","parse","search","isNaN","page","findCurrentPageBasedOnPath","setPage","setLastRendered","hasMoreQuestions","query","prevPage","_prevPage","tempLocation","listQuestions","nextPage","_nextPage","addQuestion","confirmDelete","handleDelete","_handleDelete","buildTable","questList","createQuestionEntry","TableHead_default","row","scope","WhereToVote_default","textAlign","Edit_default","Delete_default","navButton","disabled","NavigateBefore_default","NavigateNext_default","Fab_default","Add_default","_questions","has_more","loadUser","textDecoration","emptyField","grey","fontStyle","textField","fieldText","_ref$fieldType","fieldType","fieldName","updateFunc","formObject","isRequired","isSubmitting","setSubmitting","isEditable","setEditable","draftText","updateDraft","TextField_default","fixed","inputCell","whiteSpace","input","fontColor","isAuthorized","checkAuthorization","editUser","goBack","userTable","updateUserList","pageNum","lastRenderedPage","hasMoreUsers","temp","listUsers","users","userList","createUserEntry","Check_default","ChoiceField","updateChoices","text","updateText","arr","changeChoice","_event","sortContainer","listStyleType","addChoice","addIcon","quest","nextId","nextChoiceId","incrementChoiceId","_event$target2","deleteChoice","tempChoices","filter","DragHandle","sortableHandle","Dehaze_default","SortableItem","sortableElement","SortableContainer","sortableContainer","multiline","useDragHandle","onSortEnd","oldIndex","newIndex","arrayMove","onSortStart","QuestionForm_ChoiceField","postQuestion","forms_QuestionForm","maxId","newQuestion","darkTheme","createMuiTheme","typography","useNextVariants","defaultTheme","switchThemeFunc","_token$split","getItem","split","payload","decodedpayload","atob","_JSON$parse","_unused","core_styles","ui_TabChooser","WelcomeTab","tabs_questions","profile","listusers","localUser","parentTab","EditProfile","tabs_QuestionDetail","tabs_EditQuestion","tabs_NewQuestion","Boolean","hostname","app","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11dbcffa.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({basename: process.env.PUBLIC_URL});","/**\n * Support for modal confirmation dialogs\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from '@material-ui/core';\n\n/*\n * Create a confirmation dialog, to be used with dialog below.\n */\nexport function Confirm({\n  okLabel,\n  cancelLabel,\n  title,\n  children,\n  onHide,\n  ...other\n}) {\n  okLabel = okLabel || 'Ok';\n  cancelLabel = cancelLabel || 'Cancel';\n  title = title || '';\n\n  // as an alternative to the onClose, you could use disableEscapeKeyDown\n  // see https://material-ui.com/api/dialog/\n  return (\n    <Dialog\n      disableBackdropClick\n      onClose={() => onHide(false)}\n      maxWidth=\"xs\"\n      aria-labelledby=\"confirmation-dialog-title\"\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">{title}</DialogTitle>\n      <DialogContent>{children}</DialogContent>\n      <DialogActions>\n        <Button onClick={() => onHide(false)} color=\"primary\">\n          {cancelLabel}\n        </Button>\n        <Button onClick={() => onHide(true)} color=\"primary\">\n          {okLabel}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\n// source: jquense\n// https://github.com/jquense/react-bootstrap-modal/issues/36\nexport function dialog(modalElement) {\n  return new Promise(resolve => {\n    let mountNode = document.createElement('div');\n    let open = true;\n\n    render();\n\n    // onExited is called after the modal dialog has finished exiting\n    // as per https://material-ui.com/api/dialog/#props\n    function onExited() {\n      if (!mountNode) return;\n      ReactDOM.unmountComponentAtNode(mountNode);\n      mountNode = null;\n    }\n\n    function render() {\n      ReactDOM.render(\n        React.cloneElement(modalElement, {\n          open,\n          onExited,\n          onHide(action) {\n            open = false; // close upon next render\n            resolve(action);\n            render();\n          }\n        }),\n        mountNode\n      );\n    }\n  });\n}\n","export async function makeAPICall(method, url, body) {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  const token = localStorage.olivia_token;\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  try {\n    let req = fetch(url, {\n      method,\n      headers,\n      body: JSON.stringify(body)\n    });\n    return req;\n  } catch (er) {\n    throw er;\n  }\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { CircularProgress } from '@material-ui/core';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 2\n  }\n});\n\nfunction LoginForm({ onSubmit, message, classes, isLoading }) {\n  const [values, setValues] = useState({\n    username: '',\n    password: ''\n  });\n\n  // a universal onChange handler that propagates user input to component state\n  const handleChange = event => {\n    let { name, value } = event.target; // name/value from input element that changed\n    setValues({ ...values, [name]: value }); // update corresponding field in values object\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(values);\n  };\n  //const { classes } = props;\n\n  return (\n    <>\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper} component={'span'}>\n          <Avatar className={classes.avatar} component={'span'}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component={'h1'} variant={'h5'}>\n            Sign in\n          </Typography>\n          <form id=\"logform\" onSubmit={handleSubmit} className={classes.form}>\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"username\">Username</InputLabel>\n              <Input\n                onChange={handleChange}\n                id=\"username\"\n                name=\"username\"\n                autoComplete=\"current-username\"\n                autoFocus\n              />\n            </FormControl>\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\n              <Input\n                onChange={handleChange}\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </FormControl>\n            {message}\n\n            {isLoading ? (\n              <div align=\"center\" style={{ paddingTop: '4px' }}>\n                <CircularProgress />{' '}\n              </div>\n            ) : (\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign in\n              </Button>\n            )}\n          </form>\n        </Paper>\n      </main>\n    </>\n  );\n}\n\nLoginForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(LoginForm);\n","export default `${process.env.PUBLIC_URL}/api`","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeAPICall } from '../api';\nimport LoginForm from './forms/userloginform';\nimport { Typography, LinearProgress } from '@material-ui/core';\nimport history from '../history';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport apiprefix from './apiprefix';\nimport { Link as RRLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\n\nconst styles = theme => ({\n  link: {\n    color: theme.palette.secondary.main\n  }\n});\n\nconst LoginTab = ({\n  isDark,\n  updateLogin,\n  selectTab,\n  classes,\n  updateUser,\n  updateAdmin,\n  ...props\n}) => {\n  // an user message to be displayed, if any\n  const [message, updateMessage] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const nextLocation =\n    history.location.state !== undefined\n      ? history.location.state.from\n      : { pathname: '/' };\n\n  console.log(history);\n  console.log(props);\n  // handle user login\n  const userLogin = async values => {\n    setLoading(true);\n    let res = await makeAPICall('POST', `${apiprefix}/login`, values);\n    let body = await res.json();\n\n    setLoading(false);\n    if (res.status === 200) {\n      localStorage.olivia_token = body.token;\n      localStorage.olivia_id = body.id;\n      console.log(res);\n      updateUser({\n        id: body.id,\n        username: values.username,\n        admin: res.body.admin,\n        authenticated: true\n      });\n      updateAdmin(res.body.admin === 1);\n      updateLogin(true);\n\n      //if (prevLocation !== null) {\n      console.log(nextLocation.pathname);\n      if (nextLocation.pathname === '/login') {\n        nextLocation.pathname = '/';\n      }\n\n      history.replace(nextLocation.pathname);\n      window.location.href = `${process.env.PUBLIC_URL}${nextLocation.pathname}`;\n      //history.goForward();\n      /*} else {\n        history.push('/');\n        history.goForward();\n      }*/\n    } else {\n      updateMessage(\n        <Typography\n          align=\"center\"\n          style={{\n            paddingTop: '5px',\n            paddingBottom: '1px',\n            fontSize: '17px',\n            color: props.theme.palette.error.main\n          }}\n        >\n          {body.message}\n        </Typography>\n      );\n    }\n  };\n\n  return (\n    <>\n      <Typography align=\"center\" variant=\"h5\">\n        Login to change the current user\n      </Typography>\n      <Typography>\n        <LoginForm\n          onSubmit={values => userLogin(values)}\n          isLoading={isLoading}\n          message={message}\n        />\n        <div align=\"center\" style={{ paddingTop: '30px', fontSize: '16px' }}>\n          Don't have an account?{' '}\n          <Link component={RRLink} to=\"/register\" className={classes.link}>\n            Sign up\n          </Link>{' '}\n          for one!\n        </div>\n      </Typography>\n    </>\n  );\n};\n\nLoginTab.propTypes = {\n  updateLogin: PropTypes.func.isRequired\n};\n\nexport default withTheme()(withStyles(styles)(LoginTab));\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Paper from '@material-ui/core/Paper';\n//import Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 6,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 4\n  },\n  cancel: {\n    marginTop: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 4\n  }\n});\n\n/* Form used for register new users. */\nconst UserForm = ({ onSubmit, message, classes, isLoading, messageColor }) => {\n  // we are using controlled components as per\n  // https://reactjs.org/docs/forms.html#controlled-components\n  // although instead of setState etc. as in class-based components\n  // we are using the Hooks API\n  // internal state that represents current state of the form\n  const [values, setValues] = useState({\n    username: '',\n    password: '',\n    confpassword: '',\n    firstname: '',\n    lastname: '',\n    email: ''\n  });\n  // a universal onChange handler that propagates user input to component state\n  const handleChange = event => {\n    let { name, value } = event.target; // name/value from input element that changed\n    setValues({ ...values, [name]: value }); // update corresponding field in values object\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (values.password !== values.confpassword) {\n      alert('Passwords do not match!');\n    } else {\n      let tempUser = {\n        username: values.username,\n        password: values.password,\n        firstname: values.firstname,\n        lastname: values.lastname,\n        email: values.email\n      };\n      onSubmit(tempUser);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <form id=\"regform\" onSubmit={handleSubmit} className={classes.form}>\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"username\">Username</InputLabel>\n              <Input\n                onChange={handleChange}\n                id=\"username\"\n                name=\"username\"\n                autoComplete=\"current-username\"\n                placeholder=\"username\"\n                autoFocus\n              />\n            </FormControl>\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\n              <Input\n                onChange={handleChange}\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                placeholder=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </FormControl>\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"password\">Confirm Password</InputLabel>\n              <Input\n                onChange={handleChange}\n                name=\"confpassword\"\n                type=\"password\"\n                id=\"confpassword\"\n                placeholder=\"confirm password\"\n              />\n            </FormControl>\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"firstname\">First Name</InputLabel>\n              <Input\n                onChange={handleChange}\n                name=\"firstname\"\n                type=\"firstname\"\n                id=\"firstname\"\n                autoComplete=\"current-firstname\"\n                placeholder=\"first name\"\n              />\n            </FormControl>\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"lastname\">Last Name</InputLabel>\n              <Input\n                onChange={handleChange}\n                name=\"lastname\"\n                type=\"lastname\"\n                id=\"lastname\"\n                autoComplete=\"current-lastname\"\n                placeholder=\"last name\"\n              />\n            </FormControl>\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"email\">Email</InputLabel>\n              <Input\n                onChange={handleChange}\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                autoComplete=\"current-email\"\n                placeholder=\"email\"\n              />\n            </FormControl>\n            {message ? (\n              <div\n                align=\"center\"\n                style={{\n                  paddingTop: '5px',\n                  paddingBottom: '1px',\n                  fontSize: '17px',\n                  color: messageColor\n                }}\n              >\n                {message}\n              </div>\n            ) : (\n              ''\n            )}\n            {isLoading ? (\n              <div align=\"center\">\n                <CircularProgress />{' '}\n              </div>\n            ) : (\n              <Grid container spacing={20} justify=\"center\">\n                <Grid item className={classes.submit}>\n                  <Button\n                    type=\"submit\"\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Register\n                  </Button>\n                </Grid>\n                <Grid item className={classes.cancel}>\n                  <Button\n                    type=\"reset\"\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"#9e9e9e\"\n                    component={Link}\n                    to={{\n                      pathname: '/'\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </Grid>\n              </Grid>\n            )}\n          </form>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n};\n\nUserForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  message: PropTypes.string\n};\n\nexport default withStyles(styles)(UserForm);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeAPICall } from '../api';\nimport UserForm from './forms/userinformation';\nimport { Typography, LinearProgress } from '@material-ui/core';\nimport {Redirect, withRouter} from 'react-router';\nimport apiprefix from './apiprefix';\n\n\nconst styles = theme => ({\n  main: {\n    width: '200',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: 200,\n    marginRight: 400,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 200,\n      marginLeft: 200,\n      marginRight: 400\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n    //padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n    marginLeft: 200,\n    marginRight: 400\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3\n  }\n});\n\nconst RegisterTab = ({ isDark, updateLogin, updateUser, updateAdmin }) => {\n  // an user message to be displayed, if any\n  const [mess, updateMessage] = useState(null);\n  const [isLoad, setLoading] = useState(false);\n  const [messageColor, setMsgColor] = useState(isDark ? '#FFFFFF' : '#000000');\n  const [isOk, updateOk] = useState(false);\n \n\n  // handle user registeration\n  const addNewUser = async values => {\n    updateMessage(<LinearProgress />);\n    setLoading(true);\n    let res = await makeAPICall('POST', `${apiprefix}/users`, values);\n    let body = await res.json();\n    updateMessage(body.message);\n    setLoading(false);\n    if (res.status === 200) {\n      setMsgColor(isDark ? '#FFFFFF' : '#000000');\n      updateOk(true);\n      localStorage.olivia_token = body.token;\n      localStorage.olivia_id = body.user.id;\n      console.log(body);\n      updateUser({\n        id: body.user.id,\n        username: body.user.username,\n        admin: body.user.admin,\n        authenticated: true\n      });\n      updateAdmin(body.user.admin);\n\n      updateLogin(true);\n    }\n    else {\n      updateOk(false);\n      setMsgColor('#fc3c3c')\n    }\n  };\n\n  if (isOk) {\n    return <Redirect to={\"/\"} />\n  }\n  \n  return (\n    <>\n      <Typography align=\"center\" variant=\"h5\" gutterBottom>\n        Register a New User\n      </Typography>\n      <Typography>\n        <UserForm\n          onSubmit={values => addNewUser(values)}\n          //onSubmit={registerUser}\n          message={mess}\n          isLoading={isLoad}\n          classes={styles}\n          messageColor={messageColor}\n        />\n      </Typography>\n    </>\n  );\n};\n\nRegisterTab.propTypes = {\n  updateLogin: PropTypes.func.isRequired\n};\n\nexport default RegisterTab;\n\n\n/*\n// the following code must work independent of which state we're in,\n// which means for all valid combinations of data/message/isOk/isError/isLoading\n// isLoading and isError are drilled down/passed on to the UserForm component\n// where error/status message and progress indicators are displayed\nreturn (\n  <div className={classes.root}>\n    <Typography align=\"center\" variant=\"h5\" gutterBottom>\n      Register a new user\n    </Typography>\n    <UserForm\n      onSubmit={registerUser}\n      message={message}\n      isLoading={isLoading}\n      isError={isError}\n    />\n  </div>\n);\n};\n\nRegisterUser = withStyles(styles)(RegisterUser);\n\n\n\n const { data, isOk, isError, isLoading, errorMessage, request } = useDataApi(\n    null, // we do not want the hook to run a HTTP request initially\n    {},   // initial empty state\n    data => data.token  // upon success, apply this function to extract token\n  );\n  \n  // the data in both error/ok case may contain a message\n  const message = data.message;\n  \n  // callback when user clicks submit\n  const registerUser = values => {\n    setMsgColor('#fc3c3c');\n    // request just sets the \"axiosConfig\" state of the data api hook,\n    // causing its effect hook to be re-run\n    updateMessage(<LinearProgress />)\n    setLoading(true);\n    request({\n      method: 'POST',\n      url: '/api/users',\n      data: values\n    });\n    setLoading(false);\n    updateMessage(message);\n  };\n  if (isOk) {\n    console.log(`User successfully registered!`)\n    setMsgColor(isDark ? '#FFFFFF' : '#000000');\n    localStorage.token = data.token;\n    localStorage.id = data.user.id;\n    return <Redirect to={\"/\"} />\n    /* this would be a good time to update our application's state of who\n     * the current user is (perhaps by calling a passed-in updateUser function)\n     * We probably will want to navigate away from the registration page:\n     * e.g., like so: return <Redirect to={'/'}  />\n     *\n  }\n\n*/\n","import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport { Link as RRLink } from 'react-router-dom';\nimport { withRouter, Switch as RRSwitch } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Tabs, Tab } from '@material-ui/core';\nimport classNames from 'classnames';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { Route } from 'react-router';\nimport history from '../history';\nimport Button from '@material-ui/core/Button';\nimport { dialog, Confirm } from '../ui/ConfirmDialog';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport LoginTab from '../tabs/login';\nimport RegisterTab from '../tabs/register';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexGrow: 1\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: 0\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: drawerWidth\n  },\n  avatar: {\n    flex: 1,\n    marginRight: theme.spacing.unit,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: '#FFFFFF'\n  },\n  login_logout: {\n    flex: 1,\n    padding: theme.spacing.unit * 3,\n    justifyContent: 'flex-end',\n    align: 'center'\n  },\n  themeSwitch: {\n    marginLeft: theme.spacing.unit\n  }\n});\n\n/* READ THIS:\n * In the example below, we use both a Menu inside a Drawer which the user\n * can activate, and the tab-based chooser (via Tabs).\n * Both allow a user to navigate to (client-side) react-route routes.\n * The tab-based chooser denotes the currently active tab with a red line,\n * so its state must be kept in sync.\n */\nfunction TabChooser({\n  children,\n  changeTheme,\n  classes,\n  location,\n  history,\n  isLoggedIn,\n  updateLogin,\n  currentUser,\n  updateUser,\n  isAdmin,\n  updateAdmin,\n  ...props\n}) {\n  console.log(props);\n\n  //let tabs = children.filter(tab => tab && !tab.props.hidden);\n\n  // Find the index of the child whose path matches the pathname in the\n  // location object.  Return 0 (defaults to first tab) if not found.\n  function findCurrentTabBasedOnPath(location) {\n    const selectedTab = children.findIndex(\n      tab => tab.props.path === location.pathname\n    );\n    return selectedTab === -1 ? 0 : selectedTab;\n  }\n  // When the app boots and the tab chooser is rendered for the first time,\n  // derive the initial tab state from the current location (received via\n  // withRouter() which passes the 'location'/'history' properties to us.)\n  // ReactJS docs recommend to use lazy initial state, see\n  // https://reactjs.org/docs/hooks-reference.html#lazy-initial-state\n  // whenever the computation of the initial state is involved.\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [themeSwitchState, setThemeSwitch] = useState(false);\n  const [currentTab, selectTab] = useState(() =>\n    findCurrentTabBasedOnPath(location)\n  );\n  // Listen for navigation changes, for instance, when the user navigates by\n  // clicking a <Link> that is not tied to a tab, but elsewhere in the application.\n  // This includes <Link> elements in pages, or RR <Link> elements in the drawer menu.\n  // See the Welcome component for an example of how to use <Link>.\n  history.listen(location => {\n    selectTab(findCurrentTabBasedOnPath(location));\n  });\n\n  function handleThemeChange(state) {\n    localStorage.isDark = state;\n    setDrawerOpen(false);\n    setThemeSwitch(state);\n    changeTheme(state);\n  }\n\n  function pathFromTabIndex(value) {\n    const tabRes = children.find((tab, index) => {\n      return index === value;\n    });\n    return tabRes.props.path;\n  }\n\n  function handleListSelect(value, path) {\n    setDrawerOpen(false);\n    history.push(path);\n    selectTab(value);\n    //handleTabChange(value);\n  }\n\n  function handleTabChange(event, value) {\n    let tabPath = pathFromTabIndex(value);\n    //history.push(tabPath);\n    //localStorage.lastTab = location.pathname;\n    selectTab(value);\n  }\n  function handleLogout() {\n    localStorage.olivia_id = -1;\n    localStorage.removeItem('olivia_token');\n    updateLogin(false);\n    window.location.href = `${process.env.PUBLIC_URL}/`;\n  } // apply HOC*/\n\n  /*let ConfirmLogoutDialog = ({ classes }) => {\n    let [onOff, setOnOff] = useState(false);\n    let clickHandler = async () => {\n      let shouldSwitch = await dialog(\n        <Confirm title=\"Are you sure?\">\n          <Typography variant=\"body2\">\n            Are you sure you want to log out?\n          </Typography>\n        </Confirm>\n      );\n      if (shouldSwitch) setOnOff(!onOff);\n    };\n\n    return (\n      <div className={classes.root}>\n        <Typography align=\"center\" variant=\"h5\" gutterBottom>\n          A demonstration of how to use a modal dialog.\n        </Typography>\n        <Typography component=\"p\">\n          The switch is {onOff ? 'off' : 'on'}.\n          <Button onClick={clickHandler}>Switch it</Button>\n        </Typography>\n      </div>\n    );\n  };\n\n  ConfirmLogoutDialog = withStyles(styles)(ConfirmLogoutDialog); */\n\n  function LoginButton() {\n    return (\n      <Typography\n        variant=\"h6\"\n        align=\"right\"\n        color=\"inherit\"\n        style={{ flexGrow: 1 }}\n      >\n        <Button\n          component={RRLink}\n          to={{\n            pathname: '/login',\n            state: {\n              from: history.location\n            }\n          }}\n          key={'login'}\n          label={'Login'}\n          className=\"login\"\n        >\n          <Typography\n            variant=\"button\"\n            style={{ color: '#FFFFFF', fontSize: 15 }}\n          >\n            Login\n          </Typography>\n        </Button>\n      </Typography>\n    );\n  }\n\n  let LogoutButton = () => {\n    let clickHandler = async () => {\n      let shouldLogout = await dialog(\n        <Confirm title=\"Are you sure?\">\n          <Typography variant=\"body2\">\n            Are you sure you want to log out?\n          </Typography>\n        </Confirm>\n      );\n      if (shouldLogout) {\n        history.push('/logout');\n      }\n    };\n\n    return (\n      <Typography\n        variant=\"h6\"\n        align=\"right\"\n        color=\"inherit\"\n        style={{ flexGrow: 1 }}\n      >\n        <Button\n          onClick={clickHandler}\n          key={'logout'}\n          label={'Logout'}\n          className=\"logout\"\n        >\n          <AccountCircle className={classes.avatar} />\n          <Typography\n            variant=\"button\"\n            style={{ color: '#FFFFFF', fontSize: 15 }}\n          >\n            Logout\n          </Typography>\n        </Button>\n      </Typography>\n    );\n  };\n\n  let drawerContent = (\n    <Drawer\n      className={classes.drawer}\n      variant=\"persistent\"\n      anchor=\"left\"\n      open={drawerOpen}\n      classes={{\n        paper: classes.drawerPaper\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={() => setDrawerOpen(false)}>\n          {<ChevronLeftIcon />}\n        </IconButton>\n      </div>\n      <FormControlLabel\n        control={\n          <Switch\n            value={themeSwitchState}\n            onChange={event => handleThemeChange(event.target.checked)}\n          />\n        }\n        label=\"Switch Theme\"\n        className={classes.themeSwitch}\n      />\n\n      <Divider />\n      <List>\n        {children.map((tab, index) =>\n          !tab.props.hidden &&\n          (!tab.props.reqLogin || (isLoggedIn && tab.props.reqLogin)) &&\n          (!tab.props.reqAdmin || (currentUser.admin && tab.props.reqAdmin)) ? (\n            <RRLink\n              className=\"list-link\"\n              to={{\n                pathname: tab.props.path,\n                key: index,\n                state: {\n                  from: history.location\n                }\n              }}\n              key={index}\n            >\n              <ListItem\n                button\n                key={tab.props.path}\n                currenttab={currentTab}\n                value={currentTab}\n                onClick={() => handleListSelect(index, tab.props.path)}\n              >\n                <ListItemText primary={tab.props.label} key={index} />\n              </ListItem>\n            </RRLink>\n          ) : null\n        )}\n      </List>\n    </Drawer>\n  );\n\n  function customToolbar() {\n    if (location.pathname === '/login' || location.pathname === '/register') {\n      return <></>;\n    }\n    return (\n      <AppBar\n        position=\"fixed\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: drawerOpen\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={() => setDrawerOpen(true)}\n            className={classNames(\n              classes.menuButton,\n              drawerOpen && classes.hide\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            {isLoggedIn ? (\n              <Tabs value={currentTab} onChange={handleTabChange}>\n                {children.map((tab, i) => {\n                  return !tab.props.hidden &&\n                    (!tab.props.reqLogin ||\n                      (currentUser.authenticated && tab.props.reqLogin)) &&\n                    (!tab.props.reqAdmin ||\n                      (currentUser.admin && tab.props.reqAdmin)) ? (\n                    <Tab\n                      component={RRLink}\n                      to={{\n                        pathname: tab.props.path,\n                        state: {\n                          from: history.location\n                        }\n                      }}\n                      key={tab.props.label}\n                      label={tab.props.label}\n                      className=\"link\"\n                      style={{ fontSize: 16 }}\n                    />\n                  ) : null;\n                })}\n              </Tabs>\n            ) : (\n              <Tabs value={currentTab} onChange={handleTabChange}>\n                {children.map((tab, i) => {\n                  return !tab.props.reqLogin ? (\n                    <Tab\n                      component={RRLink}\n                      to={{\n                        pathname: tab.props.path,\n                        state: {\n                          from: history.location\n                        }\n                      }}\n                      key={tab.props.label}\n                      label={tab.props.label}\n                      className=\"link\"\n                      style={{ fontSize: 16 }}\n                    />\n                  ) : null;\n                })}\n              </Tabs>\n            )}\n          </Typography>\n          {isLoggedIn ? LogoutButton() : LoginButton()}\n        </Toolbar>\n        {drawerContent}\n      </AppBar>\n    );\n  }\n\n  if (isLoggedIn && currentUser.admin === undefined) {\n    //updateAdmin(currentUser.admin);\n    //alert(isAdmin);\n    //alert(currentUser.admin);\n  }\n\n  return (\n    <>\n      {customToolbar()}\n      <main\n        className={classNames(classes.content, {\n          [classes.contentShift]: drawerOpen\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <RRSwitch>\n          {children}\n          <Route exact path=\"/login\" hidden={true}>\n            <LoginTab\n              updateLogin={updateLogin}\n              updateUser={updateUser}\n              updateAdmin={updateAdmin}\n              key={'login'}\n            />\n          </Route>\n          <Route exact path=\"/register\" key={'register'} hidden={true}>\n            <RegisterTab\n              updateLogin={updateLogin}\n              updateUser={updateUser}\n              updateAdmin={updateAdmin}\n            />\n          </Route>\n          <Route\n            exact\n            path=\"/logout\"\n            hidden={true}\n            render={() => {\n              localStorage.olivia_id = -1;\n              localStorage.removeItem('olivia_token');\n              updateLogin(false);\n              history.replace('/');\n              window.location.href = `${process.env.PUBLIC_URL}/`;\n            }}\n          />\n          <Route>\n            <Typography\n              variant=\"h2\"\n              align=\"center\"\n              style={{ fontSize: 160, paddingTop: '50px' }}\n              gutterBottom\n            >\n              404\n            </Typography>\n            <Typography\n              variant=\"h2\"\n              align=\"center\"\n              style={{ fontSize: 30 }}\n              gutterBottom\n            >\n              Page Not Found\n            </Typography>\n          </Route>\n        </RRSwitch>\n      </main>\n    </>\n  );\n}\n\n// the 'withRouter' HOC will make 'location' (and 'history', and 'match) available\n// to the component.\n// See https://reacttraining.com/react-router/web/api/withRouter\nexport default withRouter(withStyles(styles)(TabChooser));\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  tabLink: {\n    color: theme.palette.secondary.main\n  }\n});\n\nconst WelcomeTab = ({ classes, ...props }) => {\n  return (\n    <>\n      <Typography align=\"center\" variant=\"h5\" gutterBottom>\n        Welcome\n      </Typography>\n      <Typography component={'span'} variant=\"h6\">\n        <div align=\"center\" style={{ paddingTop: '30px' }}>\n          {'Click to see the available '}\n          <Link\n            className={classes.tabLink}\n            to={{\n              pathname: `/questions`,\n              state: {\n                from: '/'\n              }\n            }}\n          >\n            surveys\n          </Link>\n        </div>\n      </Typography>\n    </>\n  );\n};\n\nexport default withTheme()(withStyles(styles)(WelcomeTab));\n","import React from 'react';\nimport { Redirect, withRouter } from 'react-router';\n\nexport default function RequireAuthentication(Component) {\n const wrapper = props => {\n   let { history, isLoggedIn } = props;\n   if (isLoggedIn) {\n     return <Component {...props} />;\n   } else {\n     return (\n       <Redirect\n         to={{\n           pathname: `/login`,\n           state: {\n             from: history.location\n           }\n         }}\n       />\n     );\n   }\n };\n\n return withRouter(wrapper);\n}\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport {\n  FlexibleXYPlot,\n  XYPlot,\n  XAxis,\n  YAxis,\n  HorizontalGridLines,\n  LineSeries,\n  VerticalGridLines,\n  VerticalBarSeries,\n  LabelSeries\n} from 'react-vis';\n\nconst styles = theme => ({\n  tabLink: {\n    color: theme.palette.secondary.main\n  }\n});\n\nconst BarGraph = ({ classes, data, axisLabel, ...props }) => {\n  const maxY = Math.max(...data.map(({ y }) => y));\n  const nTicks = maxY > 10 ? 10 : maxY > 5 ? 5 : maxY;\n  const margin = { left: 40, top: 10 };\n  const tickFormatter = d => {\n    //console.log(d);\n    const s = d;\n    return s.length > 10 ? s.substr(0, 10) + '...' : s;\n  };\n  return (\n    <FlexibleXYPlot\n      xType={'ordinal'}\n      width={600}\n      height={500}\n      animation={true}\n      margin={margin}\n      colorType={'category'}\n    >\n      <HorizontalGridLines />\n      <XAxis tickFormat={tickFormatter} />\n      <YAxis tickTotal={nTicks} />\n      <VerticalBarSeries\n        className=\"vertical-bar-series-example\"\n        data={data}\n        stack={false}\n      />\n    </FlexibleXYPlot>\n  );\n};\n\nexport default withTheme()(withStyles(styles)(BarGraph));\n","/**\n * Taken from the material ui examples page\n * \n * Customized Snackbars\n * -------------------------\n * https://material-ui.com/demos/snackbars/\n * \n * \n * \n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\n\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\n\nfunction SnackbarWrapper(props) {\n  const { className, message, onClose, variant, classes, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nSnackbarWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n};\n\nexport default withTheme()(withStyles(styles)(SnackbarWrapper));\n","import React, { useState } from 'react';\nimport { makeAPICall } from '../api';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Typography, LinearProgress } from '@material-ui/core';\nimport RequireAuthentication from '../RequireAuthentication';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport BarGraph from '../ui/BarGraph';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarWrapper from '../ui/SnackbarWrapper';\nimport apiprefix from './apiprefix';\n\nconst styles = theme => ({\n  table: {\n    width: '40%',\n    margin: 'auto'\n  },\n  editButton: {\n    marginTop: theme.spacing.unit * 5\n  },\n  editIcon: {\n    marginLeft: theme.spacing.unit * 2\n  },\n  choices: {\n    align: 'left'\n  },\n  group: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    align: 'left'\n  },\n  table: {\n    align: 'left'\n  },\n  formLabel: {\n    marginTop: theme.spacing.unit * 5,\n    marginBottom: theme.spacing.unit * 1\n  },\n  formButtons: {\n    padding: theme.spacing.unit * 1\n  },\n  questionTitle: {\n    marginTop: theme.spacing.unit * 4,\n    marginBottom: theme.spacing.unit * 4\n  },\n  votePrompt: {\n    align: 'center',\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 4,\n    color: theme.palette.error.main\n  },\n  votePromptBody: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 4,\n    color: theme.palette.common.black\n  }\n});\n\nlet QuestionDetail = ({ classes, currentUser, ...props }) => {\n  //console.log(props);\n  const [question, updateQuestion] = useState({\n    question: '',\n    description: '',\n    type: '',\n    choices: [],\n    id: ''\n  });\n  const [hasCalled, updateCall] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [isLoadingVote, setLoadingVote] = useState(false);\n  const [currentChoice, setChoice] = useState(undefined);\n  const [votes, updateVotes] = useState({ totals: [] });\n  const [prevVote, updateVote] = useState(undefined);\n  const [isVoting, setVoting] = useState(false);\n  const [showSnackbar, updateSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(null);\n\n  function selectOption(event) {\n    setChoice(Number(event.target.value));\n  }\n\n  async function handleVote() {\n    if (currentChoice === prevVote && prevVote !== undefined) {\n      /*alert(\n        'ERR: Duplicate vote!\\nPlease change your vote to update the server.'\n      );*/\n      setSnackbarMessage(\n        <SnackbarWrapper\n          onClose={() => {\n            updateSnackbar(false);\n          }}\n          variant=\"error\"\n          message=\"Duplicate vote! Please change your vote to update the server.\"\n        />\n      );\n      updateSnackbar(true);\n    }\n    else if (currentChoice === undefined) {\n      alert('Please Select on of the Options!');\n    } else {\n      await submitVote();\n      setSnackbarMessage(\n        <SnackbarWrapper\n          onClose={() => {\n            updateSnackbar(false);\n          }}\n          variant=\"success\"\n          message=\"Succesfully Voted!\"\n        />\n      );\n    }\n    loadVotes();\n  }\n\n  /**\n   * ===================================\n   *            Api Calls\n   * -----------------------------------\n   *  - GET   /api/question/:qid\n   *  - GET   /api/question/:qid/vote\n   *  - GET   /api/question/:qid/vote?user={id}\n   *  - POST  /api/question/:qid/vote\n   * ===================================\n   */\n\n  // GET   /api/question/:qid\n  let loadQuestion = async () => {\n    var murl = window.location.pathname;\n    var id = Number(murl.substring(murl.lastIndexOf('/') + 1));\n    const url = `${apiprefix}/question/${id}`;\n    setLoading(true);\n    let response = await makeAPICall('GET', url);\n    let rbody = await response.json();\n    if (response.status === 200) {\n      updateQuestion({\n        question: rbody.question,\n        description: rbody.description,\n        type: rbody.type,\n        choices: rbody.choices,\n        id: rbody.id\n      });\n      console.log(rbody);\n      setLoading(false);\n    } else {\n      setLoading(false);\n    }\n  };\n\n  // GET   /api/question/:qid/vote\n  let loadVotes = async () => {\n    var murl = window.location.pathname;\n    var id = Number(murl.substring(murl.lastIndexOf('/') + 1));\n    const url = `${apiprefix}/question/${id}/vote`;\n    setLoadingVote(true);\n    let response = await makeAPICall('GET', url);\n    let rbody = await response.json();\n    if (response.status === 200) {\n      console.log('Votes');\n      console.log(rbody);\n      updateVotes({\n        totals: rbody.totals\n      });\n    }\n    setLoadingVote(false);\n  };\n\n  // GET   /api/question/:qid/vote?user={id}\n  let getUserVote = async () => {\n    var murl = window.location.pathname;\n    var id = Number(murl.substring(murl.lastIndexOf('/') + 1));\n    const url = `${apiprefix}/question/${id}/vote?user=${localStorage.olivia_id}`;\n    console.log(url);\n    setLoadingVote(true);\n    let response = await makeAPICall('GET', url);\n    let rbody = await response.json();\n    if (response.status === 200) {\n      console.log('My Vote');\n      console.log(rbody);\n      updateVote(rbody.votes === undefined ? rbody.votes : rbody.votes[0]);\n      setChoice(rbody.votes === undefined ? rbody.votes : rbody.votes[0]);\n      setLoadingVote(false);\n    } else {\n      setLoadingVote(false);\n    }\n  };\n\n  //POST  /api/question/:qid/vote\n  let submitVote = async () => {\n    var murl = window.location.pathname;\n    var id = Number(murl.substring(murl.lastIndexOf('/') + 1));\n    const url = `${apiprefix}/question/${id}/vote`;\n    let request = { user: currentUser.id, choice: Number(currentChoice) };\n    console.log(request);\n    setVoting(true);\n    let response = await makeAPICall('POST', url, request);\n    let rbody = await response.json();\n    //let response = {status: 503};\n    if (response.status === 200) {\n      console.log(rbody);\n      updateVote(Number(currentChoice));\n      updateSnackbar(true);\n      setVoting(false);\n    } else {\n      setVoting(false);\n    }\n  };\n\n  function choiceFromId(value) {\n    //console.log(question);\n    const tempChoice = question.choices.find((choice, index) => {\n      return choice.id === value;\n    });\n    return tempChoice !== undefined ? tempChoice.description : '';\n  }\n\n  let ChoiceSelection = ({ choices }) => {\n    return (\n      <>\n        <FormControl component=\"fieldset\" className={classes.choices}>\n          <FormLabel className={classes.formLabel} component=\"legend\">\n            Please chose one\n          </FormLabel>\n          <RadioGroup\n            aria-label=\"Question-choices\"\n            name=\"choices\"\n            className={classes.group}\n            value={currentChoice}\n            onChange={selectOption}\n          >\n            {choices.map((choice, index) => {\n              return (\n                <FormControlLabel\n                  value={choice.id}\n                  control={<Radio />}\n                  label={choice.description}\n                />\n              );\n            })}\n          </RadioGroup>\n        </FormControl>\n      </>\n    );\n  };\n\n  let grData = [];\n  question.choices.map((choice, index) => {\n    console.log(choice);\n    grData.push({ color: index, x: choice.description, y: 0 });\n  });\n  votes.totals.forEach((vote, index) => {\n    let dataInd = grData.find((elem, index) => \n      (elem.x === choiceFromId(vote.choice))\n      //  console.log(\"FEEND \",elem);\n    );\n    //console.log(\"DATA\",dataInd);\n    if (dataInd !== undefined) {\n      grData[dataInd.color] = { ...grData[dataInd.color], y: vote.count };\n    }\n  });\n\n  let labels = [];\n  votes.totals.map(choice => labels.push(choiceFromId(choice.choice)));\n  console.log(grData);\n  console.log(labels);\n  let votingResults = (\n    <Grid item xs={6}>\n      <Card>\n        <>\n          <BarGraph data={grData} axisLabel={labels} />\n        </>\n      </Card>\n    </Grid>\n  );\n\n  let votingPrompt = (\n    <Grid item xs={6}>\n      <Card>\n        <Typography align=\"center\" className={classes.votePrompt} variant=\"h5\">\n          No Votes Found!\n        </Typography>\n        <Typography\n          align=\"center\"\n          className={classes.votePromptBody}\n          variant=\"h6\"\n        >\n          You must vote first before you can see the results!\n        </Typography>\n      </Card>\n    </Grid>\n  );\n\n  if (!hasCalled) {\n    updateCall(true);\n    getUserVote();\n    loadQuestion();\n    loadVotes();\n  }\n  return (\n    <>\n      <Grid container spacing={8}>\n        <Grid item xs={6}>\n          <Card>\n            <div style={{ width: '100%' }}>\n              <Typography\n                align=\"center\"\n                variant=\"h5\"\n                className={classes.questionTitle}\n                gutterBottom\n              >\n                {question.question}\n              </Typography>\n              <Table className={classes.table}>\n                <TableBody>\n                  <TableRow>\n                    <TableCell align=\"left\">\n                      {isLoading ? (\n                        <LinearProgress />\n                      ) : (\n                        <ChoiceSelection choices={question.choices} />\n                      )}\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n              <CardActions className={classes.formButtons}>\n                <Grid container spacing={8}>\n                  <Grid item>\n                    <Button\n                      variant=\"outlined\"\n                      size=\"medium\"\n                      color=\"primary\"\n                      onClick={handleVote}\n                    >\n                      <b>VOTE</b>\n                    </Button>\n                  </Grid>\n                  <Grid\n                    item\n                    style={{ marginLeft: props.theme.spacing.unit * 2 }}\n                  >\n                    <Button\n                      variant=\"outlined\"\n                      size=\"medium\"\n                      color=\"#9e9e9e\"\n                      component={Link}\n                      to={{\n                        pathname: '/questions',\n                        state: {\n                          from: props.history.location.pathname\n                        }\n                      }}\n                    >\n                      <b>CANCEL</b>\n                    </Button>\n                  </Grid>\n                </Grid>\n              </CardActions>\n            </div>\n          </Card>\n        </Grid>\n        {prevVote === undefined ? votingPrompt : votingResults}\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        open={showSnackbar}\n        autoHideDuration={3000}\n        onClose={() => {\n          updateSnackbar(false);\n        }}\n      >\n        {snackbarMessage}\n      </Snackbar>\n    </>\n  );\n};\nexport default withTheme()(\n  withStyles(styles)(RequireAuthentication(QuestionDetail))\n);\n\n/*\n\n <Grid container spacing={20} justify=\"center\">\n          <Grid item className={classes.editButton}>\n            <Link\n              to={{\n                pathname: `/profile/edit/${question.id}`,\n                state: {\n                  from: props.history.location\n                }\n              }}\n              style={{textDecoration: 'none'}}\n            >\n              <Button size=\"large\" variant=\"outlined\" color=\"primary\">\n                Edit Profile<EditIcon className={classes.editIcon}/> \n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n\n*/\n","import React, { useState } from 'react';\nimport { makeAPICall } from '../api';\nimport PropTypes from 'prop-types';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Check from '@material-ui/icons/Check';\nimport { Typography, CircularProgress } from '@material-ui/core';\nimport RequireAuthentication from '../RequireAuthentication';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport QuestionDetail from './QuestionDetail';\nimport { Route } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport WhereToVoteIcon from '@material-ui/icons/WhereToVote';\nimport { Link } from 'react-router-dom';\nimport NavigateLeftIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateRightIcon from '@material-ui/icons/NavigateNext';\nimport queryString from 'query-string';\nimport Grid from '@material-ui/core/Grid';\nimport { dialog, Confirm } from '../ui/ConfirmDialog';\nimport apiprefix from './apiprefix';\n\nconst styles = theme => ({\n  table: {\n    width: '90%',\n    margin: 'auto'\n  },\n  optionsCell: {\n    marginRight: theme.spacing.unit * 4\n  },\n  questionCell: {\n    marginRight: theme.spacing.unit * 6\n  },\n  fab: {\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n    margin: theme.spacing.unit * 4,\n    top: 'auto',\n    left: 'auto',\n    position: 'fixed'\n  }\n});\n\nfunction createQuestionEntry(question) {\n  return {\n    id: question.id,\n    question: question.question,\n    description: question.description,\n    type: question.type\n  };\n}\nconst SurveyTab = ({ classes, match, location, history, ...props }) => {\n  console.log(history);\n  function findCurrentPageBasedOnPath(location) {\n    let tempQuery = queryString.parse(location.search);\n    return isNaN(Number(tempQuery.page)) ? 0 : Number(tempQuery.page);\n  }\n  const [haveCalled, updateCall] = useState(false);\n  const [message, updateMessage] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [questions, updateQuestionList] = useState(null);\n  const [pageNum, setPage] = useState(findCurrentPageBasedOnPath(location));\n  const [lastRenderedPage, setLastRendered] = useState(-1);\n\n  let hasMoreQuestions = false;\n  console.log(props);\n  console.log(match);\n  let query = queryString.parse(location.search);\n  if (isNaN(Number(query.page))) {\n    query = { page: '0' };\n  }\n\n  async function prevPage() {\n    if (Number(query.page) > 0) {\n      query.page--;\n      setPage(query.page);\n      let tempLocation = {\n        pathname: `/questions`,\n        search: `?page=${Number(query.page)}`,\n        state: {\n          from: history.location\n        }\n      };\n      history.push(tempLocation);\n      //history.goForward();\n      await listQuestions();\n    }\n  }\n  async function nextPage() {\n    query.page++;\n    setPage(query.page);\n    let tempLocation = {\n      pathname: `/questions`,\n      search: `?page=${Number(query.page)}`,\n      state: {\n        from: history.location\n      }\n    };\n    history.push(tempLocation);\n    //history.goForward();\n    await listQuestions();\n  }\n\n  function addQuestion() {\n    history.push({\n      pathname: `/questions/new`,\n      state: {\n        from: history.location\n      }\n    });\n  }\n\n  function editQuestion(value) {\n    history.push({\n      pathname: `/question/edit/${value}`,\n      state: {\n        from: history.location\n      }\n    });\n  }\n\n  let confirmDelete = async id => {\n    let shouldDelete = await dialog(\n      <Confirm title=\"Are you sure?\">\n        <Typography variant=\"body2\">\n          Are you sure you want to delete this question?\n        </Typography>\n      </Confirm>\n    );\n    if (shouldDelete) {\n      handleDelete(id);\n      updateCall(false);\n    }\n  };\n  async function handleDelete(id) {\n    setLoading(true);\n    const url = `${apiprefix}/question/${id}`;\n    let response = await makeAPICall('DELETE', url);\n    let rbody = await response.json();\n    //let response = {status: 503};\n    console.log(rbody);\n    if (response.status === 200) {\n    }\n    setLoading(false);\n  }\n\n  let buildTable = questions => {\n    let questList = [];\n    questions.map(question => questList.push(createQuestionEntry(question)));\n\n    return (\n      <>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell align=\"center\">\n                <span>Question</span>\n              </TableCell>\n              <TableCell align=\"right\" className={classes.optionsCell}>\n                <span className={classes.optionsCell}>Options</span>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {questions.map((row, index) => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link\n                    to={{\n                      pathname: `/question/${row.id}`,\n                      state: {\n                        from: history.location\n                      }\n                    }}\n                  >\n                    <IconButton\n                      size=\"medium\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      <WhereToVoteIcon color=\"primary\" />\n                    </IconButton>\n                  </Link>\n                </TableCell>\n                <TableCell width={props.theme.spacing.unit * 80}>\n                  <Typography variant=\"h6\" align={'left'} marginRight={50}>\n                    {row.question}\n                  </Typography>\n                  <Typography\n                    style={{\n                      fontSize: 14,\n                      marginTop: props.theme.spacing.unit,\n                      textAlign: 'left'\n                    }}\n                  >\n                    {'Please choose one.'}\n                  </Typography>\n                </TableCell>\n\n                {Number(localStorage.olivia_id) === 1 ? (\n                  <TableCell align=\"right\">\n                    <IconButton\n                      size=\"medium\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => {\n                        editQuestion(row.id);\n                      }}\n                    >\n                      <EditIcon style={{ fontSize: 20 }} />\n                    </IconButton>\n                    <IconButton\n                      size=\"medium\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => confirmDelete(row.id)}\n                    >\n                      <DeleteIcon style={{ fontSize: 20 }} />\n                    </IconButton>\n                  </TableCell>\n                ) : (\n                  <TableCell />\n                )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <Grid container spacing={20} justify=\"center\">\n          <Grid item className={classes.navButton}>\n            <IconButton\n              //Previous Button\n              disabled={query.page < 1}\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={prevPage}\n            >\n              <NavigateLeftIcon style={{ fontSize: 30 }} />\n            </IconButton>\n          </Grid>\n\n          <Grid item className={classes.navButton}>\n            <IconButton\n              //Next Button\n              disabled={!hasMoreQuestions}\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={nextPage}\n            >\n              <NavigateRightIcon style={{ fontSize: 30 }} />\n            </IconButton>\n          </Grid>\n        </Grid>\n        {Number(localStorage.olivia_id) === 1 ? (\n          <Fab className={classes.fab} color=\"primary\" onClick={addQuestion}>\n            {' '}\n            <AddIcon />{' '}\n          </Fab>\n        ) : null}\n      </>\n    );\n  };\n\n  let listQuestions = async () => {\n    //    showSpinner(true);\n    const url = `${apiprefix}/question/?page=${query.page}`;\n    setLastRendered(Number(query.page));\n    setLoading(true);\n    let response = await makeAPICall('GET', url);\n    let rbody = await response.json();\n    setLoading(false);\n    if (response.status === 200) {\n      console.log('Got Questions');\n      console.log(rbody);\n      let { questions } = rbody;\n      hasMoreQuestions = rbody.has_more;\n      updateQuestionList(buildTable(questions));\n    } else if (response.status === 403) {\n      updateMessage(\n        <div key=\"fail\" style={{ color: '#fc3c3c' }}>\n          Requires admin permission\n        </div>\n      );\n    } else {\n      setLoading(false);\n    }\n    // all API responses have JSON bodie\n    //    showSpinner(false);\n  };\n\n  // This is to ensure listUsers() is only called once when the page loads\n  if (!haveCalled) {\n    updateCall(true);\n    listQuestions();\n  }\n\n  return (\n    <>\n      <div style={{ width: '100%' }}>\n        <Typography align=\"center\" variant=\"h5\" gutterBottom>\n          Available Questions\n        </Typography>\n        <Typography>\n          {isLoading ? (\n            <div style={{ paddingTop: '50px' }} align=\"center\">\n              <CircularProgress />\n            </div>\n          ) : (\n            questions\n          )}\n          {message ? (\n            <div\n              style={{ paddingTop: '50px', fontSize: '18px' }}\n              align=\"center\"\n            >\n              {message}\n            </div>\n          ) : null}\n        </Typography>\n      </div>\n    </>\n  );\n};\n\nSurveyTab.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withTheme()(\n  withStyles(styles)(RequireAuthentication(SurveyTab))\n);\n","import React, { useState } from 'react';\nimport { makeAPICall } from '../api';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Typography, LinearProgress } from '@material-ui/core';\nimport RequireAuthentication from '../RequireAuthentication';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport apiprefix from './apiprefix';\n\nconst styles = theme => ({\n  table: {\n    width: '30%',\n    margin: 'auto',\n    marginTop: theme.spacing.unit * 5\n  },\n  editButton: {\n    marginTop: theme.spacing.unit * 5\n  },\n  editIcon: {\n    marginLeft: theme.spacing.unit * 2\n  }\n});\n\nlet ProfileTab = ({ classes, ...props }) => {\n  const [user, updateUser] = useState({\n    username: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    id: ''\n  });\n  const [hasCalled, updateCall] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  let loadUser = async () => {\n    const url = `${apiprefix}/users/${localStorage.olivia_id}`;\n    setLoading(true);\n    let response = await makeAPICall('GET', url);\n    let rbody = await response.json();\n    if (response.status === 200) {\n      updateUser({\n        username: rbody.username,\n        firstname: rbody.firstname,\n        lastname: rbody.lastname,\n        email: rbody.email,\n        id: rbody.id\n      });\n      setLoading(false);\n    } else {\n      setLoading(false);\n    }\n  };\n\n  if (!hasCalled) {\n    updateCall(true);\n    loadUser();\n  }\n  return (\n    <>\n      <div style={{ width: '100%' }}>\n        <Typography align=\"center\" variant=\"h4\" gutterBottom>\n          Current User Profile\n        </Typography>\n        <Table className={classes.table}>\n          <TableBody>\n            <TableRow>\n              <TableCell><Typography style={{fontSize: 18}}>ID:</Typography></TableCell>\n              <TableCell align=\"left\">\n                {isLoading ? (\n                  <LinearProgress />\n                ) : (\n                  <Typography style={{fontSize: 16}}>{user.id}</Typography>\n                )}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell><Typography style={{fontSize: 18}}>Username:</Typography></TableCell>\n              <TableCell align=\"left\">\n                {isLoading ? <LinearProgress /> : <Typography style={{fontSize: 16}}>{user.username}</Typography>}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell><Typography style={{fontSize: 18}}>First Name:</Typography></TableCell>\n              <TableCell align=\"left\">\n                {isLoading ? <LinearProgress /> : <Typography style={{fontSize: 16}}>{user.firstname}</Typography>}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell><Typography style={{fontSize: 18}}>Last Name:</Typography></TableCell>\n              <TableCell align=\"left\">\n                {isLoading ? <LinearProgress /> : <Typography style={{fontSize: 16}}>{user.lastname}</Typography>}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell><Typography style={{fontSize: 18}}>Email:</Typography></TableCell>\n              <TableCell align=\"left\">\n                {isLoading ? <LinearProgress /> : <Typography style={{fontSize: 16}}>{user.email}</Typography>}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n        <Grid container spacing={20} justify=\"center\">\n          <Grid item className={classes.editButton}>\n            <Link\n              to={{\n                pathname: `/profile/edit/${user.id}`,\n                state: {\n                  from: props.history.location\n                }\n              }}\n              style={{ textDecoration: 'none' }}\n            >\n              <Button size=\"large\" variant=\"outlined\" color=\"primary\">\n                Edit Profile\n                <EditIcon className={classes.editIcon} />\n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default withStyles(styles)(RequireAuthentication(ProfileTab));\n","import React, { useState } from 'react';\nimport { makeAPICall } from '../api';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport {\n  Typography,\n  LinearProgress,\n  CircularProgress\n} from '@material-ui/core';\nimport RequireAuthentication from '../RequireAuthentication';\nimport EditableField from './forms/EditableField';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport apiprefix from './apiprefix';\n\nconst styles = theme => ({\n  table: {\n    width: '40%',\n    margin: 'auto',\n    marginTop: theme.spacing.unit * 5\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 6,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 4\n  },\n  cancel: {\n    marginTop: theme.spacing.unit * 6,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 4\n  },\n  fixed: {\n    color: theme.palette.grey[700]\n  },\n  inputCell: {\n    whiteSpace: 'nowrap'\n  },\n  input: {\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    fontColor: theme.palette.secondary.main,\n  },\n});\n\nlet EditProfileTab = ({ classes, ...props }) => {\n  const [user, updateUser] = useState({\n    username: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    id: ''\n  });\n  const [hasCalled, updateCall] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [message, updateMessage] = useState(null);\n  const [isAuthorized, checkAuthorization] = useState(false);\n  const [isSubmitting, setSubmitting] = useState(false);\n  const [isEditable, setEditable] = useState(true);\n\n  let loadUser = async () => {\n    var murl = window.location.pathname;\n    var id = Number(murl.substring(murl.lastIndexOf('/') + 1));\n    console.log(props.theme);\n    checkAuthorization(\n      Number(localStorage.olivia_id) === Number(id) || Number(localStorage.olivia_id) === 1\n    );\n    if (\n      Number(localStorage.olivia_id) === Number(id) ||\n      Number(localStorage.olivia_id) === 1\n    ) {\n      const url = `${apiprefix}/users/${id}`;\n      setLoading(true);\n      let response = await makeAPICall('GET', url);\n      let rbody = await response.json();\n      if (response.status === 200) {\n        updateUser({\n          username: rbody.username,\n          firstname: rbody.firstname,\n          lastname: rbody.lastname,\n          email: rbody.email,\n          id: rbody.id\n        });\n      } else if (response.status === 404) {\n        updateMessage(\n          <div key=\"fail\" style={{ color: props.theme.palette.error.main }}>\n            User Not Found\n          </div>\n        );\n      }\n      setLoading(false);\n    } else {\n      updateMessage(\n        <Typography\n          key=\"fail\"\n          style={{\n            fontSize: 25,\n            color: props.theme.palette.error.main,\n            marginTop: props.theme.spacing.unit * 5\n          }}\n        >\n          Only an Admin can modify other user accounts\n        </Typography>\n      );\n    }\n  };\n\n  //POST  /api/question/:qid/vote\n  let editUser = async () => {\n    var murl = window.location.pathname;\n    var id = Number(murl.substring(murl.lastIndexOf('/') + 1));\n    const url = `${apiprefix}/users/${id}`;\n    let response = await makeAPICall('PUT', url, user);\n    let rbody = await response.json();\n    //let response = {status: 503};\n    if (response.status === 200) {\n      updateUser(rbody.user);\n      if(Number(localStorage.olivia_id) === Number(rbody.user.id)) {\n        localStorage.olivia_token = rbody.token;\n      }\n    }\n    //alert(rbody.message);\n  };\n\n  if (!hasCalled && !isLoading) {\n    updateCall(true);\n    loadUser();\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSubmitting(true);\n    setEditable(false);\n    editUser();\n    setSubmitting(false);\n    props.history.push({\n      pathname: '/profile',\n      state: {\n        from: props.history.location\n      }\n    });\n  };\n\n  const handleChange = name => event => {\n    console.log(user);\n    updateUser({ ...user, [name]: event.target.value });\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <div style={{ paddingTop: '50px' }} align=\"center\">\n          <CircularProgress />\n        </div>\n      ) : isAuthorized && !message ? (\n        <form\n          id=\"editprofile\"\n          onSubmit={handleSubmit}\n          style={{ width: '100%' }}\n        >\n          <Typography align=\"center\" variant=\"h4\" gutterBottom>\n            Edit User Profile\n          </Typography>\n          <Table className={classes.table}>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <Typography style={{ fontSize: 18 }}>ID:</Typography>\n                </TableCell>\n                <TableCell align=\"left\" className={classes.fixed}>\n                  <Typography variant=\"h6\" className={classes.fixed}>\n                    {user.id}\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography style={{ fontSize: 18 }}>Username:</Typography>\n                </TableCell>\n                <TableCell align=\"left\" className={classes.fixed}>\n                  {isLoading ? (\n                    <LinearProgress />\n                  ) : (\n                    <Typography variant=\"h6\" className={classes.fixed}>\n                      {user.username}\n                    </Typography>\n                  )}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography style={{ fontSize: 18 }}>First Name:</Typography>\n                </TableCell>\n                <TableCell align=\"left\" className={classes.inputCell}>\n                  {isLoading ? (\n                    <LinearProgress />\n                  ) : (\n                    <TextField\n                      required\n                      className={classes.input}\n                      label={'Firstname'}\n                      type={'firstname'}\n                      id={'firstname-field'}\n                      value={user.firstname}\n                      fontSize={25}\n                      variant=\"outlined\"\n                      onChange={handleChange('firstname')}\n                    />\n                  )}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography style={{ fontSize: 18 }}>Last Name:</Typography>\n                </TableCell>\n                <TableCell align=\"left\" className={classes.inputCell}>\n                  {isLoading ? (\n                    <LinearProgress />\n                  ) : (\n                    <TextField\n                      required\n                      className={classes.input}\n                      label={'Lastname'}\n                      type={'lastname'}\n                      id={'lastname-field'}\n                      value={user.lastname}\n                      fontSize={25}\n                      variant=\"outlined\"\n                      onChange={handleChange('lastname')}\n                    />\n                  )}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography style={{ fontSize: 18 }}>Email:</Typography>\n                </TableCell>\n                <TableCell align=\"left\" className={classes.inputCell}>\n                  {isLoading ? (\n                    <LinearProgress />\n                  ) : (\n                    <TextField\n                      className={classes.input}\n                      required\n                      label={'Email'}\n                      type={'email'}\n                      id={'email-field'}\n                      value={user.email}\n                      fontSize={25}\n                      variant=\"outlined\"\n                      onChange={handleChange('email')}\n                    />\n                  )}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography style={{ fontSize: 18 }}>Password:</Typography>\n                </TableCell>\n                <TableCell align=\"left\" className={classes.inputCell}>\n                  <TextField\n                    className={classes.input}\n                    label={'Password'}\n                    type={'password'}\n                    id={'password-field'}\n                    value={user.password}\n                    fontSize={25}\n                    variant=\"outlined\"\n                    onChange={handleChange('password')}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n          <Grid container spacing={20} justify=\"center\">\n            <Grid item className={classes.submit}>\n              <Button\n                type=\"submit\"\n                size=\"large\"\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Submit\n              </Button>\n            </Grid>\n            <Grid item className={classes.cancel}>\n              <Button\n                type=\"reset\"\n                size=\"large\"\n                variant=\"contained\"\n                color=\"#9e9e9e\"\n                onClick={() => {\n                  props.history.goBack();\n                }}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      ) : (\n        <Typography align=\"center\" variant=\"h6\" gutterBottom>\n          {message}\n        </Typography>\n      )}\n    </>\n  );\n};\n\nexport default withStyles(styles)(\n  withTheme()(RequireAuthentication(EditProfileTab))\n);\n\n/*\n<Link\n                to={{\n                  pathname: props.history.location.state.from.pathname,\n                  state: {\n                    from: props.history.location\n                  }\n                }}\n                style={{ textDecoration: 'none' }}\n              >\n*/\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport { CircularProgress } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  emptyField: {\n    color: theme.palette.grey[500],\n    fontStyle: 'italic'\n  },\n  textField: {\n    color: theme.palette.secondary.main\n  }\n});\n\nlet EditableField = ({\n  classes,\n  fieldText,\n  fieldType = 'text',\n  fieldName,\n  updateFunc,\n  formObject,\n  isSubmitting,\n  setSubmitting,\n  isEditable,\n  setEditable,\n  isRequired,\n  ...props\n}) => {\n  const [isEditing, setEditing] = useState(false);\n  const [text, updateText] = useState(fieldText);\n  const [draftText, updateDraft] = useState(fieldText);\n  let hasChanged = false;\n\n  function toggleEditing() {\n    updateDraft(text);\n    setEditing(!isEditing);\n  }\n\n  const handleChange = event => {\n    let { value } = event.target; // name/value from input element that changed\n    updateDraft(value);\n    updateFunc({ ...formObject, [fieldName]: draftText });\n    hasChanged = true;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    updateFunc({ ...formObject, [fieldName]: draftText });\n  };\n\n  const handleCancel = event => {\n    updateDraft(text);\n    setEditing(false);\n    console.log(text);\n    hasChanged = false;\n  };\n\n  return (\n    <>\n    {isRequired ?\n      <TextField\n        required\n        label={fieldName}\n        autoFocus\n        type={fieldType}\n        id={'input-field'}\n        onChange={handleChange}\n        value={draftText}\n        fontSize={25}\n        variant=\"outlined\"\n      /> :\n      <TextField\n      label={fieldName}\n      autoFocus\n      type={fieldType}\n      id={'input-field'}\n      onChange={handleChange}\n      value={draftText}\n      fontSize={25}\n      variant=\"outlined\"\n    />}\n    </> \n\n  );\n};\n\nEditableField.propTypes = {\n  fieldText: PropTypes.string.isRequired,\n  fieldName: PropTypes.string.isRequired,\n  fieldType: PropTypes.string,\n  formObject: PropTypes.object.isRequired,\n  updateFunc: PropTypes.func.isRequired\n};\n\nexport default withTheme()(withStyles(styles)(EditableField));\n\n/*\n\n          <TextField\n            id=\"outlined-name\"\n            label=\"Name\"\n            className={classes.textField}\n            value={values.name}\n            onChange={handleChange('name')}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n\n\n                <IconButton\n        size=\"small\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleSubmit}\n      >\n        <CheckIcon style={{ fontSize: 20 }} />\n      </IconButton>\n      <IconButton\n        size=\"small\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleCancel}\n      >\n        <CloseIcon style={{ fontSize: 20 }} />\n      </IconButton>\n          */\n","import React, { useState } from 'react';\nimport { makeAPICall } from '../api';\nimport PropTypes from 'prop-types';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Check from '@material-ui/icons/Check';\nimport NavigateLeftIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateRightIcon from '@material-ui/icons/NavigateNext';\nimport { Typography, CircularProgress } from '@material-ui/core';\nimport RequireAuthentication from '../RequireAuthentication';\nimport queryString from 'query-string';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Grid from '@material-ui/core/Grid';\nimport history from '../history';\nimport { Link } from 'react-router-dom';\nimport apiprefix from './apiprefix';\n\nconst styles = theme => ({\n  table: {\n    width: '90%',\n    margin: 'auto'\n  },\n\n  navButton: {\n    marginTop: theme.spacing.unit * 4,\n    marginRight: theme.spacing.unit * 6\n  }\n});\n\nfunction createUserEntry(user) {\n  return {\n    id: user.id,\n    username: user.username,\n    firstname: user.firstname,\n    lastname: user.lastname,\n    email: user.email,\n    admin: user.admin\n  };\n}\nconst ListTab = ({ classes, history, location, ...props }) => {\n  \n  function findCurrentPageBasedOnPath(location) {\n    let tempQuery = queryString.parse(location.search);\n    return isNaN(Number(tempQuery.page)) ? 0 : Number(tempQuery.page);\n  }\n  const [haveCalled, updateCall] = useState(false);\n  const [message, updateMessage] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [userTable, updateUserList] = useState(null);\n  const [pageNum, setPage] = useState(findCurrentPageBasedOnPath(location));\n  const [lastRenderedPage, setLastRendered] = useState(-1);\n  let hasMoreUsers = false;\n  console.log('PAGE: ' + pageNum);\n  history.listen(location => {\n    let temp = findCurrentPageBasedOnPath(location);\n    if (lastRenderedPage !== -1 && lastRenderedPage !== temp) {\n      setPage(temp);\n    }\n  });\n\n  //const [moreUsers, checkNumPrev] = useState(false);\n  console.log(history);\n  let query = queryString.parse(location.search);\n  if (isNaN(Number(query.page))) {\n    query = { page: '0' };\n  }\n  const { palette } = props.theme;\n\n  async function prevPage() {\n    if (Number(query.page) > 0) {\n      query.page--;\n      setPage(query.page);\n      let tempLocation = {\n        pathname: `/listusers`,\n        search: `?page=${Number(query.page)}`,\n        state: {\n          from: history.location\n        }\n      };\n      history.push(tempLocation);\n      //history.goForward();\n      await listUsers();\n    }\n  }\n  async function nextPage() {\n    query.page++;\n    setPage(query.page);\n    let tempLocation = {\n      pathname: `/listusers`,\n      search: `?page=${Number(query.page)}`,\n      state: {\n        from: history.location\n      }\n    };\n    history.push(tempLocation);\n    //history.goForward();\n    await listUsers();\n  }\n\n  let buildTable = users => {\n    let userList = [];\n    users.map(user => userList.push(createUserEntry(user)));\n    return (\n      <>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                <span />\n              </TableCell>\n              <TableCell>ID</TableCell>\n              <TableCell align=\"right\">Username</TableCell>\n              <TableCell align=\"right\">Firstname</TableCell>\n              <TableCell align=\"right\">Lastname</TableCell>\n              <TableCell align=\"right\">Email</TableCell>\n              <TableCell align=\"right\">Admin</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map(row => (\n              <TableRow key={row.id}>\n                <TableCell>\n                  <Link\n                    to={{\n                      pathname: `/profile/edit/${row.id}`,\n                      state: {\n                        from: history.location\n                      }\n                    }}\n                  >\n                    <IconButton\n                      size=\"small\"\n                      variant=\"contained\"\n                      color=\"secondary\"\n                    >\n                      <EditIcon style={{ fontSize: 16 }} />\n                    </IconButton>\n                  </Link>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.id}\n                </TableCell>\n                <TableCell align=\"right\">{row.username}</TableCell>\n                <TableCell align=\"right\">{row.firstname}</TableCell>\n                <TableCell align=\"right\">{row.lastname}</TableCell>\n                <TableCell align=\"right\">{row.email}</TableCell>\n                <TableCell align=\"right\">\n                  {row.admin ? <Check /> : null}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <Grid container spacing={20} justify=\"center\">\n          <Grid item className={classes.navButton}>\n            <IconButton\n              //Previous Button\n              disabled={query.page < 1}\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={prevPage}\n            >\n              <NavigateLeftIcon style={{ fontSize: 30 }} />\n            </IconButton>\n          </Grid>\n\n          <Grid item className={classes.navButton}>\n            <IconButton\n              //Next Button\n              disabled={!hasMoreUsers}\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={nextPage}\n            >\n              <NavigateRightIcon style={{ fontSize: 30 }} />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </>\n    );\n  };\n\n  let listUsers = async () => {\n    console.log('RELOAD');\n    //    showSpinner(true);\n    const url = `${apiprefix}/users/?page=${query.page}`;\n    setLastRendered(Number(query.page));\n    setLoading(true);\n    let response = await makeAPICall('GET', url);\n    let rbody = await response.json();\n    hasMoreUsers = rbody.has_more;\n    setLoading(false);\n    if (response.status === 200) {\n      let { users } = rbody;\n      updateUserList(buildTable(users));\n    } else if (response.status === 403) {\n      updateMessage(\n        <div key=\"fail\" style={{ color: '#fc3c3c' }}>\n          Requires admin permission\n        </div>\n      );\n    }\n    // all API responses have JSON bodie\n    //    showSpinner(false);\n  };\n\n  // This is to ensure listUsers() is only called once when the page loads\n  if (\n    !haveCalled ||\n    (lastRenderedPage !== -1 && lastRenderedPage !== pageNum)\n  ) {\n    updateCall(true);\n    listUsers();\n  }\n\n  return (\n    <>\n      <div style={{ width: '100%' }}>\n        <Typography align=\"center\" variant=\"h5\" gutterBottom>\n          List currently registerd users\n        </Typography>\n        <Typography>\n          {isLoading ? (\n            <div style={{ paddingTop: '50px' }} align=\"center\">\n              <CircularProgress />\n            </div>\n          ) : (\n            userTable\n          )}\n          {message ? (\n            <div\n              style={{ paddingTop: '50px', fontSize: '18px' }}\n              align=\"center\"\n            >\n              {message}\n            </div>\n          ) : null}\n        </Typography>\n      </div>\n    </>\n  );\n};\n\nListTab.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withTheme()(withStyles(styles)(RequireAuthentication(ListTab)));\n\n/*\n\n\n            <Link\n              to={{\n                pathname: `/listusers`,\n                search: `?page=${Number(query.page) + 1}`,\n                state: {\n                  from: `/listusers?page=${Number(query.page)}`\n                }\n              }}\n            >\n\n\n            */\n","import React, { useState } from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Typography, LinearProgress } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport {\n  sortableContainer,\n  sortableElement,\n  sortableHandle\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport DragIcon from '@material-ui/icons/Dehaze';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 700,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`\n  },\n  title: {\n    marginTop: theme.spacing.unit * 2\n  },\n  choice: {\n    marginBottom: theme.spacing.unit,\n    marginLeft: theme.spacing.unit * 1.5,\n    width: '75%'\n  },\n  question: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit * 2,\n    width: '90%'\n  },\n  description: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit * 2,\n    width: '90%'\n  },\n  sortContainer: {\n    listStyleType: 'none',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 4,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 4,\n    marginBottom: theme.spacing.unit * 3\n  },\n  cancel: {\n    marginTop: theme.spacing.unit * 4,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 4,\n    marginBottom: theme.spacing.unit * 3\n  },\n  addChoice: {\n    marginLeft: theme.spacing.unit * 1\n  },\n  addIcon: {\n    marginTop: theme.spacing.unit,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit\n  }\n});\n\nlet ChoiceField = ({\n  classes,\n  id,\n  handleDelete,\n  updateChoices,\n  choices,\n  ...props\n}) => {\n  const [text, updateText] = useState(props.value);\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { name, value } = event.target; // name/value from input element that changed\n    if (name === 'choices') {\n      updateText(value);\n      changeChoice(id, value);\n    }\n  };\n\n  function changeChoice(id, value) {\n    let tempChoices = choices.arr.map((choice, index) => {\n      if (choice.id == id) {\n        choice.description = value;\n      }\n      return choice;\n    });\n  }\n\n  return (\n    <>\n      <TextField\n        className={classes.choice}\n        type=\"text\"\n        placeholder={`${id}`}\n        id={id}\n        name=\"choices\"\n        key={`choice ${id}`}\n        onChange={handleChange}\n        value={text}\n        fontSize={25}\n      />\n      <IconButton\n        size=\"small\"\n        variant=\"contained\"\n        color=\"secondary\"\n        key={`delete icon ${id}`}\n        onClick={_event => handleDelete(_event, id)}\n      >\n        <DeleteIcon style={{ fontSize: 20 }} />\n      </IconButton>\n    </>\n  );\n};\n\nlet QuestionForm = ({\n  classes,\n  currentUser,\n  onSubmit,\n  quest,\n  nextId,\n  ...props\n}) => {\n  const [question, updateQuestion] = useState(\n    quest !== undefined\n      ? {\n          question: quest.question,\n          description: quest.description,\n          type: quest.type,\n          choices: quest.choices,\n          id: quest.id\n        }\n      : {\n          question: '',\n          description: '',\n          type: '',\n          choices: [],\n          id: ''\n        }\n  );\n  const [text, updateText] = useState('');\n  const [choices, updateChoices] = useState({\n    arr: quest !== undefined ? quest.choices : []\n  });\n  const [nextChoiceId, incrementChoiceId] = useState(\n    quest !== undefined ? nextId : 1\n  );\n\n  const handleChange = event => {\n    let { name, value } = event.target; // name/value from input element that changed\n    updateText(value);\n    updateQuestion({ ...question, [name]: value }); // update corresponding field in values object\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(question);\n  };\n\n  function addChoice(event) {\n    let tempChoices = choices.arr;\n    tempChoices.push({ id: nextChoiceId, description: '' });\n    incrementChoiceId(nextChoiceId + 1);\n    //console.log(tempChoices);\n    updateQuestion({ ...question, choices: tempChoices });\n    updateChoices({ arr: tempChoices });\n  }\n\n  function deleteChoice(event, value) {\n    let tempChoices = choices.arr.filter((choice, index) => {\n      if (choice.id !== value) {\n        //choice.props.id = index;\n        return choice;\n      }\n      //return choice;\n    });\n    updateQuestion({ ...question, choices: tempChoices });\n    updateChoices({ arr: tempChoices });\n  }\n\n  const DragHandle = sortableHandle(() => <DragIcon color=\"primary\" />);\n\n  const SortableItem = sortableElement(({ value, className }) => (\n    <li className={className}>\n      <DragHandle style={{ marginTop: 5 }} />\n      {value}\n    </li>\n  ));\n\n  const SortableContainer = sortableContainer(({ children, className }) => {\n    return <ul className={className}>{children}</ul>;\n  });\n\n  let onSortEnd = ({ oldIndex, newIndex }) => {\n    /*this.setState(({items}) => ({\n      items: arrayMove(items, oldIndex, newIndex),\n    }));*/\n    let tempChoices = arrayMove(choices.arr, oldIndex, newIndex);\n    updateChoices({ arr: tempChoices });\n    updateQuestion({ ...question, choices: tempChoices });\n  };\n\n  let onSortStart = ({ oldIndex, newIndex }) => {\n    console.log('DOGS');\n  };\n\n  return (\n    <>\n      <form\n        id=\"newquestion\"\n        onSubmit={handleSubmit}\n        key={'questform'}\n        style={{ width: '100%' }}\n      >\n        <TextField\n          align=\"center\"\n          className={classes.question}\n          type=\"text\"\n          label=\"Question\"\n          id={'quest-field'}\n          name=\"question\"\n          fullWidth\n          key={'quest'}\n          multiline\n          onChange={handleChange}\n          value={question.question}\n          fontSize={25}\n        />\n        <TextField\n          className={classes.description}\n          type=\"text\"\n          label=\"Description\"\n          id={'description'}\n          key={'desc'}\n          name=\"description\"\n          fullWidth\n          multiline\n          onChange={handleChange}\n          value={question.description}\n          fontSize={25}\n        />\n        <SortableContainer\n          useDragHandle\n          className={classes.sortContainer}\n          onSortEnd={onSortEnd}\n          onSortStart={onSortStart}\n          key={'sort container'}\n        >\n          {choices.arr.map((choice, index) => (\n            <SortableItem\n              className={classes.sortContainer}\n              key={`item-${index}`}\n              index={index}\n              value={\n                <ChoiceField\n                  classes={classes}\n                  value={choice.description}\n                  id={choice.id}\n                  key={choice.id}\n                  handleDelete={deleteChoice}\n                  choices={choices}\n                  updateChoices={updateChoices}\n                />\n              }\n            />\n          ))}\n        </SortableContainer>\n        <Grid container spacing={0}>\n          <Grid item>\n            <Button onClick={addChoice} className={classes.addChoice}>\n              <AddIcon color=\"primary\" className={classes.addIcon} />\n              <TextField\n                type=\"text\"\n                name=\"add-choice\"\n                label={\n                  <span style={{ fontStyle: 'italic', marginLeft: 6 }}>\n                    Add New Choice\n                  </span>\n                }\n                id={'choice-add'}\n                key={'choice add'}\n                fullWidth\n                disabled\n                fontSize={25}\n              />\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid container spacing={20} justify=\"center\">\n          <Grid item className={classes.submit}>\n            <Button\n              type=\"submit\"\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Submit\n            </Button>\n          </Grid>\n          <Grid item className={classes.cancel}>\n            <Button\n              type=\"reset\"\n              size=\"large\"\n              variant=\"contained\"\n              color=\"#9e9e9e\"\n              onClick={() => {\n                props.history.goBack();\n              }}\n            >\n              Cancel\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n};\nexport default withTheme()(withStyles(styles)(QuestionForm));\n","import React, { useState } from 'react';\nimport { makeAPICall } from '../api';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Typography, LinearProgress } from '@material-ui/core';\nimport RequireAuthentication from '../RequireAuthentication';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport QuestionForm from './forms/QuestionForm';\nimport apiprefix from './apiprefix';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 700,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`\n  },\n  choice: {\n    margin: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3\n  },\n  title: {\n    marginTop: theme.spacing.unit * 2\n  },\n  error: {\n    color: theme.palette.error.main\n  }\n});\n\nlet NewQuestion = ({ classes, currentUser, quest, ...props }) => {\n  const [question, updateQuestion] = useState(\n    quest !== undefined\n      ? quest\n      : {\n          question: '',\n          description: '',\n          type: '1',\n          choices: [],\n          id: ''\n        }\n  );\n  const [hasCalled, updateCall] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [isLoadingVote, setLoadingVote] = useState(false);\n  const [currentChoice, setChoice] = useState(undefined);\n  const [votes, updateVotes] = useState({ totals: [] });\n  const [prevVote, updateVote] = useState(undefined);\n  const [isVoting, setVoting] = useState(false);\n  const [text, updateText] = useState('');\n  const [choices, updateChoices] = useState({ arr: [] });\n\n  let postQuestion = async values => {\n    var murl = window.location.pathname;\n    var id = Number(murl.substring(murl.lastIndexOf('/') + 1));\n    const url = `${apiprefix}/question/`;\n    console.log('Sub');\n    console.log(values);\n    values.choices = values.choices.map(choice => {\n      if (\n        choice !== undefined &&\n        choice.description !== undefined &&\n        choice.description.length > 0\n      ) {\n        return choice.description;\n      }\n    });\n    values.choices = values.choices.filter(\n      choice => choice !== undefined && choice !== null && choice.length > 0\n    );\n    values.type = '1';\n    console.log(values);\n    let response = await makeAPICall('POST', url, values);\n    let rbody = await response.json();\n    //let response = {status: 503};\n    console.log(rbody);\n    if (response.status === 200) {\n      props.history.replace({\n        pathname: '/questions',\n        state: {\n          from: `/question/edit/${rbody.id}`\n        }\n      });\n    }\n    //alert(rbody.message);\n  };\n\n  const handleSubmit = values => {\n    postQuestion(values);\n  };\n\n  /**\n   * ===================================\n   *            Api Calls\n   * -----------------------------------\n   *  - GET   /api/question/:qid\n   *  - GET   /api/question/:qid/vote\n   *  - GET   /api/question/:qid/vote?user={id}\n   *  - POST  /api/question/:qid/vote\n   * ===================================\n   */\n\n  return (\n    <>\n      {currentUser.admin ? (\n        <main className={classes.main}>\n          <Card>\n            <Typography align=\"center\" variant=\"h5\" className={classes.title}>\n              Create New Question\n            </Typography>\n            <QuestionForm\n              history={props.history}\n              onSubmit={question => handleSubmit(question)}\n            />\n          </Card>\n        </main>\n      ) : (\n        <Typography align=\"center\" variant=\"h5\" className={classes.error}>\n          Requires Admin Permission\n        </Typography>\n      )}\n    </>\n  );\n};\nexport default withTheme()(\n  withStyles(styles)(RequireAuthentication(NewQuestion))\n);\n\n/*\n\n <Grid container spacing={20} justify=\"center\">\n          <Grid item className={classes.editButton}>\n            <Link\n              to={{\n                pathname: `/profile/edit/${question.id}`,\n                state: {\n                  from: props.history.location\n                }\n              }}\n              style={{textDecoration: 'none'}}\n            >\n              <Button size=\"large\" variant=\"outlined\" color=\"primary\">\n                Edit Profile<EditIcon className={classes.editIcon}/> \n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n\n*/\n","import React, { useState } from 'react';\nimport { makeAPICall } from '../api';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Typography, LinearProgress } from '@material-ui/core';\nimport RequireAuthentication from '../RequireAuthentication';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Card from '@material-ui/core/Card';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport QuestionForm from './forms/QuestionForm';\nimport apiprefix from './apiprefix';\nimport SnackbarWrapper from '../ui/SnackbarWrapper';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 700,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`\n  },\n  title: {\n    marginTop: theme.spacing.unit * 2\n  },\n  choice: {\n    marginBottom: theme.spacing.unit,\n    marginLeft: theme.spacing.unit * 1.5,\n    width: '75%'\n  },\n  question: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit * 2,\n    width: '90%'\n  },\n  description: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit * 2,\n    width: '90%'\n  },\n  sortContainer: {\n    listStyleType: 'none',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  error: {\n    color: theme.palette.error.main\n  }\n});\n\nlet EditQuestion = ({ classes, currentUser, ...props }) => {\n  console.log(props);\n  const [question, updateQuestion] = useState({\n    question: '',\n    description: '',\n    type: '',\n    choices: [],\n    id: ''\n  });\n  const [hasCalled, updateCall] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [text, updateText] = useState('');\n  const [choices, updateChoices] = useState({ arr: [] });\n  const [nextChoiceId, incrementChoiceId] = useState(0);\n  const [snackbarMessage, setSnackbarMessage] = useState(null);\n  const [showSnackbar, updateSnackbar] = useState(false);\n\n  const handleSubmit = values => {\n    postQuestion(values);\n  };\n\n  /**\n   * ===================================\n   *            Api Calls\n   * -----------------------------------\n   *  - GET   /api/question/:qid\n   *  - GET   /api/question/:qid/vote\n   *  - GET   /api/question/:qid/vote?user={id}\n   *  - POST  /api/question/:qid/vote\n   * ===================================\n   */\n\n  // GET   /api/question/:qid\n  let loadQuestion = async () => {\n    var murl = window.location.pathname;\n    var id = Number(murl.substring(murl.lastIndexOf('/') + 1));\n    const url = `${apiprefix}/question/${id}`;\n    setLoading(true);\n    let response = await makeAPICall('GET', url);\n    let rbody = await response.json();\n    if (response.status === 200) {\n      updateQuestion({\n        question: rbody.question,\n        description: rbody.description,\n        type: rbody.type,\n        choices: rbody.choices,\n        id: rbody.id\n      });\n      console.log(rbody.choices);\n      let tempChoices = rbody.choices.map((choice, index) => choice);\n      let maxId = -1;\n      for (var i = 0; i < tempChoices.length; i++) {\n        if (tempChoices[i].id > maxId) {\n          maxId = tempChoices[i].id;\n        }\n      }\n      incrementChoiceId(rbody.choices.length + 1);\n      console.log(tempChoices);\n      updateChoices({ arr: tempChoices });\n      console.log(rbody);\n      setLoading(false);\n      console.log(question);\n    } else {\n      setLoading(false);\n    }\n  };\n\n  let postQuestion = async values => {\n    var murl = window.location.pathname;\n    var id = Number(murl.substring(murl.lastIndexOf('/') + 1));\n    const url = `${apiprefix}/question/${id}`;\n    console.log('Sub');\n    console.log(values);\n    values.choices = values.choices.map(choice => {\n      if (\n        choice !== undefined &&\n        choice.description !== undefined &&\n        choice.description.length > 0\n      ) {\n        return choice.description;\n      }\n    });\n    values.choices = values.choices.filter(\n      choice => choice !== undefined && choice !== null && choice.length > 0\n    );\n    console.log(values);\n    let response = await makeAPICall('PUT', url, values);\n    let rbody = await response.json();\n    let newQuestion = rbody.newQuestion;\n    //let response = {status: 503};\n    console.log('RESP: ');\n    console.log(newQuestion);\n    console.log(newQuestion.choices);\n    if (response.status === 200) {\n      updateQuestion({\n        question: newQuestion.question,\n        description: newQuestion.description,\n        type: newQuestion.type,\n        choices: newQuestion.choices,\n        id: newQuestion.id\n      });\n      updateChoices({ arr: newQuestion.choices });\n      setSnackbarMessage(\n        <SnackbarWrapper\n          onClose={() => {\n            updateSnackbar(false);\n          }}\n          variant=\"success\"\n          message=\"Question Updated Successfully!\"\n        />\n      );\n      updateSnackbar(true);\n    } else {\n      setSnackbarMessage(\n        <SnackbarWrapper\n          onClose={() => {\n            updateSnackbar(false);\n          }}\n          variant=\"error\"\n          message=\"Error Updating Question!\"\n        />\n      );\n      updateSnackbar(true);\n    }\n    //alert(rbody.message);\n  };\n\n  if (!hasCalled) {\n    updateCall(true);\n    loadQuestion();\n  }\n\n  return (\n    <>\n      {currentUser.admin ? (\n        <>\n          <main className={classes.main}>\n            <Card>\n              <Typography align=\"center\" variant=\"h5\" className={classes.title}>\n                Edit Question\n              </Typography>\n              {isLoading ? null : (\n                <QuestionForm\n                  history={props.history}\n                  quest={question}\n                  nextId={nextChoiceId}\n                  onSubmit={question => handleSubmit(question)}\n                />\n              )}\n            </Card>\n          </main>\n          <Snackbar\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right'\n            }}\n            open={showSnackbar}\n            autoHideDuration={3000}\n            onClose={() => {\n              updateSnackbar(false);\n            }}\n          >\n            {snackbarMessage}\n          </Snackbar>{' '}\n        </>\n      ) : (\n        <Typography align=\"center\" variant=\"h5\" className={classes.error}>\n          Requires Admin Permission\n        </Typography>\n      )}\n    </>\n  );\n};\nexport default withTheme()(\n  withStyles(styles)(RequireAuthentication(EditQuestion))\n);\n\n/*\n\n <Grid container spacing={20} justify=\"center\">\n          <Grid item className={classes.editButton}>\n            <Link\n              to={{\n                pathname: `/profile/edit/${question.id}`,\n                state: {\n                  from: props.history.location\n                }\n              }}\n              style={{textDecoration: 'none'}}\n            >\n              <Button size=\"large\" variant=\"outlined\" color=\"primary\">\n                Edit Profile<EditIcon className={classes.editIcon}/> \n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n\n*/\n","import React, { useState } from 'react';\nimport TabChooser from './ui/TabChooser';\nimport WelcomeTab from './tabs/welcome';\n//import RegisterTab from './tabs/register';\n//import LoginTab from './tabs/login';\nimport SurveyTab from './tabs/questions';\nimport ProfileTab from './tabs/profile';\nimport EditProfileTab from './tabs/EditProfile';\nimport ListTab from './tabs/listusers';\nimport { Route } from 'react-router';\nimport { Router } from 'react-router-dom';\nimport {\n  withStyles,\n  MuiThemeProvider,\n  createMuiTheme\n} from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport QuestionDetail from './tabs/QuestionDetail';\nimport NewQuestion from './tabs/NewQuestion';\nimport EditQuestion from './tabs/EditQuestion';\n//import { withRouter, Switch as RRSwitch } from 'react-router';\n//import { Link as RRLink } from 'react-router-dom';\nimport queryString from 'query-string';\n\nimport Typography from '@material-ui/core/Typography';\n\n\nimport history from './history';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexGrow: 1\n  }\n});\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    primary: green,\n    type: 'dark' // Switching the dark mode on is a single property value change.\n  },\n  typography: { useNextVariants: true } // avoids deprecated warning\n});\n\nconst defaultTheme = createMuiTheme({\n  typography: { useNextVariants: true } // avoids deprecated warning\n});\n\nconst App = ({ classes, ...props }) => {\n  let [isDark, switchThemeFunc] = useState(localStorage.isDark === true);\n  let [isLoggedIn, updateLogin] = useState(localStorage.olivia_id > 0);\n  let [currentUser, updateUser] = useState(() => {\n    try {\n      const token = localStorage.getItem('olivia_token');\n      const [, payload] = token.split(/\\./);\n      const decodedpayload = atob(payload); // base64 decode\n      let { id, username, admin } = JSON.parse(decodedpayload);\n      return {\n        id,\n        username,\n        admin,\n        authenticated: true\n      };\n    } catch {\n      return { authenticated: false };\n    }\n  });\n  const [isAdmin, updateAdmin] = useState(0);\n  //console.log(localStorage.olivia_id);\n  //localStorage.lastTab = \"/\";\n  // history.push(history.location);\n\n  let tabs = [\n    { text: 'Welcome', path: '/', component: WelcomeTab, hidden: false },\n    {\n      text: 'Surveys',\n      path: '/questions',\n      component: SurveyTab,\n      hidden: false\n    },\n    //{ text: 'Login', path: '/login', component: LoginTab, hidden: true },\n    { text: 'Profile', path: '/profile', component: ProfileTab, hidden: true },\n    {\n      text: 'List Users',\n      path: '/listusers/:page',\n      component: ListTab,\n      hidden: true\n    }\n  ];\n\n  // eslint-disable-next-line\n  // let [currentUser, updateUser] = useState(initialUser);\n\n  return (\n    <React.Fragment>\n      <MuiThemeProvider theme={isDark ? darkTheme : defaultTheme}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <Router basename={`${process.env.PUBLIC_URL}`} history={history}>\n            <TabChooser\n              changeTheme={switchThemeFunc}\n              isLoggedIn={isLoggedIn}\n              updateLogin={updateLogin}\n              updateUser={updateUser}\n              currentUser={currentUser}\n              updateAdmin={updateAdmin}\n              isAdmin={isAdmin}\n            >\n              <Route\n                exact\n                path=\"/\"\n                label=\"Welcome\"\n                key=\"/\"\n                hidden={false}\n                reqAdmin={false}\n                reqLogin={false}\n                component={WelcomeTab}\n              />\n              <Route\n                exact\n                path=\"/questions\"\n                label=\"Surveys\"\n                key=\"/questions\"\n                reqAdmin={false}\n                reqLogin={true}\n                hidden={false}\n              >\n                <SurveyTab isLoggedIn={isLoggedIn} updateLogin={updateLogin} />\n              </Route>\n              <Route\n                exact\n                path=\"/profile\"\n                label=\"Profile\"\n                key=\"/profile\"\n                reqAdmin={false}\n                reqLogin={true}\n                hidden={false}\n              >\n                <ProfileTab isLoggedIn={isLoggedIn} updateLogin={updateLogin} />\n              </Route>\n              <Route\n                path=\"/listusers\"\n                label=\"List Users\"\n                key=\"/listusers\"\n                reqAdmin={true}\n                reqLogin={true}\n                hidden={false}\n              >\n                <ListTab isLoggedIn={isLoggedIn} updateLogin={updateLogin} />\n              </Route>\n              <Route\n                path=\"/profile/edit\"\n                label=\"Edit Profile\"\n                key=\"/profile/edit\"\n                hidden={true}\n                reqAdmin={false}\n                reqLogin={true}\n                localUser={currentUser}\n                parentTab={{ pathname: '/profile' }}\n              >\n                <EditProfileTab\n                  isLoggedIn={isLoggedIn}\n                  updateLogin={updateLogin}\n                />\n              </Route>\n              <Route\n                exact\n                path=\"/question/:qid\"\n                label=\"Question Tab\"\n                key=\"/question/:qid\"\n                reqAdmin={false}\n                reqLogin={true}\n                hidden={true}\n              >\n                <QuestionDetail\n                  isLoggedIn={isLoggedIn}\n                  updateLogin={updateLogin}\n                  history={history}\n                  currentUser={currentUser}\n                />\n              </Route>\n              <Route\n                exact\n                path=\"/question/edit/:qid\"\n                label=\"Edit Question Tab\"\n                key=\"/question/edit/:qid\"\n                reqAdmin={false}\n                reqLogin={true}\n                hidden={true}\n              >\n                <EditQuestion\n                  isLoggedIn={isLoggedIn}\n                  updateLogin={updateLogin}\n                  history={history}\n                  currentUser={currentUser}\n                />\n              </Route>\n              <Route\n                path=\"/questions/new\"\n                label=\"Create New Question\"\n                key=\"/questions/new\"\n                reqAdmin={true}\n                reqLogin={true}\n                hidden={true}\n              >\n                <NewQuestion\n                  isLoggedIn={isLoggedIn}\n                  updateLogin={updateLogin}\n                  history={history}\n                  currentUser={currentUser}\n                />\n              </Route>\n\n            </TabChooser>\n          </Router>\n        </div>\n      </MuiThemeProvider>\n    </React.Fragment>\n  );\n};\n\n/*\n        <TabChooser>\n          <WelcomeTab label=\"Welcome\" name=\"WelcomeTab\" path=\"/welcome\"/>\n          <RegisterTab label=\"Register\" name=\"RegisterTab\" path=\"/register\" updateUser={updateUser} />\n          <LoginTab label=\"Login\" name=\"LoginTab\" path=\"/login\" updateUser={updateUser} />\n          <ProfileTab label=\"Profile\" name=\"ProfileTab\" path=\"/profile\"/>\n          <ListTab label=\"List Users\" name=\"ListTab\" path=\"/listusers\"/>\n        </TabChooser>\n\n\n                    <TabChooser changeTheme={switchThemeFunc} isLoggedIn={isLoggedIn}>\n              {tabs.map(tab => (\n                <Route exact path={tab.path} label={tab.text}>\n                  <tab.component isDark={isDark} updateLogin={updateLogin} />\n                </Route>\n              ))}\n            </TabChooser>\n        */\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './style.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}